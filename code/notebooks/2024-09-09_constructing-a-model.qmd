---
title: "Constructing a simple model"
author: 'eleanorjackson'
date: '`r format(Sys.time(), "%d %B, %Y")`' 
format: gfm+emoji
editor: source
execute:
  warning: false
---

```{r setup}
#| include: false

file_name <- knitr::current_input()

knitr::opts_chunk$set(
  fig.path =
    paste0("figures/", sub("\\.rmarkdown$", "", basename(file_name)), "/", sep = "")
)

ggplot2::theme_set(ggplot2::theme_classic(base_size = 10))
```

```{r}
library("tidyverse")
library("patchwork")
```


### Flow diagram of the model

```{mermaid}
flowchart LR
  A(Seed) -- survive --> B(Seedling)
  B -- survive --> C(Adult)
  C -- reproduce --> A
  B -. mortality -.-> DEAD2:::hidden
  A -. mortality -.-> DEAD1:::hidden
  C -. mortality -.-> DEAD3:::hidden
  
  classDef hidden display: none;
```

### Specifying the model

$$
n_s(t) = n_a(t) - M_s(t)
$$

$$
n_j(t) = n_a(t) - M_j(t)
$$

$$
n_a(t) = n_s(t) - M_a(t)
$$

Number of seeds at time $t$ equals the number of adults minus the mortality of seeds.

Number of juveniles at time $t$ equals the number of seeds minus the mortality of juveniles.

Number of adults at time $t$ equals the number of juveniles minus the mortality of adults.

I think we want a discrete time model rather than continuous time -
continuous time might allow continuous production of seeds,
while this only happens annually. 
So a sensible time step might be 1 year?

A *recursion equation* describes the value of a variable in the next time step. 
e.g.

$$
n(t + 1) = n(t) + \text{increase} - \text{decrease}
$$

In continuous time models you use *differential equations,* which specify the rate of change of the variables over time.
e.g.

$$
\frac{\text{d}(n(t))}{\text{d}t} = \text{rate of increase} - \text{rate of decrease}
$$

You can also have something called a *difference equation,* which might describe the change in a variable within a time step.
e.g.

$$
\Delta n = \text{increase} - \text{decrease}
$$

Constraints of this model might be that,

- the number of seeds and is always larger than the number of juveniles and the number of juveniles is always larger than the number of adults
- none of the parameters can be less than one

https://kevintshoemaker.github.io/NRES-470/LECTURE7.html

https://kevintshoemaker.github.io/NRES-470/LAB4.html

http://ecovirtual.ib.usp.br/doku.php?id=en:ecovirt:roteiro:pop_str:pstr_mtr

## Transition matrix

A Leslie matrix has one column for each age class.
A Lefkovitch matrix allows individuals to remain in life-stages 
for more than one time step - useful for plant and animals with stage-dependent demography.

```{r}
t_mat <- matrix(     
  c(
    0.25, 1.5, 1.5,
    0.4, 0, 0,
    0, 0.75, 0
  ),
  nrow = 3, ncol = 3, byrow = T,
  dimnames = (list(c("seed", "juvenile", "adult"),
                  NULL))
)

t_mat
```

Starting with 1,000 seeds

```{r}
abund_init <- c(1000, 0, 0)

abund_init
```



```{r}
yr_1 <- t_mat %*% abund_init 

yr_1
```

```{r}
n_years <- 30

all_years <- matrix(0, 
                    nrow = nrow(t_mat), 
                    ncol = n_years + 1)

all_years[,1] <- yr_1

for(t in 2:(n_years + 1)){   
  all_years[,t] <-  t_mat %*% all_years[,t-1]
}

all_years
```

```{r}
all_years %>% 
  as_tibble(name_repair = "unique") %>% 
  rowid_to_column(var = "stage") %>% 
  pivot_longer(cols = contains("V"),
               names_to = "time") %>% 
  mutate(stage = recode(stage, 
                        "seeds",
                        "juveniles",
                        "adults"),
         time = as.numeric(str_remove(time, pattern = "V"))) %>% 
  ggplot(aes(x = time, y = value, 
             colour = stage, group = stage)) +
  geom_line()
```

The model should have a stable age structure where 
the proportion of individuals in each age group remains constant.

```{r}
#| fig-width: 7
#| fig-height: 10

all_years %>% 
  as_tibble(name_repair = "unique") %>% 
  rowid_to_column(var = "stage") %>% 
  pivot_longer(cols = contains("V"),
               names_to = "time") %>% 
  mutate(stage = recode(stage, 
                        "seeds",
                        "juveniles",
                        "adults"),
         time = as.numeric(str_remove(time, pattern = "V"))) %>% 
  ggplot(aes(x = time, y = value, fill = stage)) +
  geom_col() +
  
  all_years %>% 
  as_tibble(name_repair = "unique") %>% 
  rowid_to_column(var = "stage") %>% 
  pivot_longer(cols = contains("V"),
               names_to = "time") %>% 
  mutate(stage = recode(stage, 
                        "seeds",
                        "juveniles",
                        "adults"),
         time = as.numeric(str_remove(time, pattern = "V"))) %>% 
  ggplot(aes(x = time, y = value, fill = stage)) +
  geom_col(position = "fill") +
  
  plot_layout(guides = "collect", ncol = 1)
```
